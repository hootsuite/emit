{"Classes/Signal.html#/s:4Emit6SignalCACyxGycfc":{"name":"init()","abstract":"<p>Initializes a <code>Signal</code>.</p>","parent_name":"Signal"},"Classes/Signal.html#/s:4Emit6SignalC4emityyxF":{"name":"emit(_:)","abstract":"<p>Emits <code>self</code> to all subscribers.</p>","parent_name":"Signal"},"Classes/Signal.html#/s:4Emit6SignalC9subscribe5owner2in6actionyyXl_So17OS_dispatch_queueCyxctF":{"name":"subscribe(owner:in:action:)","abstract":"<p>Subscribes an object to <code>self</code>.</p>","parent_name":"Signal"},"Classes/Signal.html#/s:4Emit6SignalC11unsubscribeyyyXlF":{"name":"unsubscribe(_:)","abstract":"<p>Unsubscribes an object from <code>self</code>.</p>","parent_name":"Signal"},"Classes/Signal.html#/s:4Emit6SignalC14unsubscribeAllyyF":{"name":"unsubscribeAll()","abstract":"<p>Removes all subscribers.</p>","parent_name":"Signal"},"Classes/Signal.html#/s:4Emit6SignalC6filter5whereACyxGSbxc_tF":{"name":"filter(where:)","abstract":"<p>Creates a new signal that filters events from this signal.</p>","parent_name":"Signal"},"Classes/Signal.html#/s:4Emit6SignalC3mapyACyqd__Gqd__xclF":{"name":"map(_:)","abstract":"<p>Returns a new signal that emits mapped event.</p>","parent_name":"Signal"},"Classes/Signal.html#/s:4Emit6SignalC7flatMapyACyqd__Gqd__SgxclF":{"name":"flatMap(_:)","abstract":"<p>Returns a new signal that emits mapped events and skips <code>nil</code> events.</p>","parent_name":"Signal"},"Classes/RWLock.html#/s:4Emit6RWLockCACycfc":{"name":"init()","abstract":"<p>Initializes a <code>RWLock</code></p>","parent_name":"RWLock"},"Classes/RWLock.html#/s:4Emit6RWLockC14lockForReadingyyF":{"name":"lockForReading()","abstract":"<p>Lock for reading.</p>","parent_name":"RWLock"},"Classes/RWLock.html#/s:4Emit6RWLockC14lockForWritingyyF":{"name":"lockForWriting()","abstract":"<p>Lock for writing.</p>","parent_name":"RWLock"},"Classes/RWLock.html#/s:4Emit6RWLockC6unlockyyF":{"name":"unlock()","abstract":"<p>Unlock.</p>","parent_name":"RWLock"},"Classes/RWLock.html#/s:4Emit6RWLockC11performReadyxxyKXEKlF":{"name":"performRead(_:)","abstract":"<p>Executes a closure with a read lock.</p>","parent_name":"RWLock"},"Classes/RWLock.html#/s:4Emit6RWLockC12performWriteyxxyKXEKlF":{"name":"performWrite(_:)","abstract":"<p>Executes a closure with a write lock.</p>","parent_name":"RWLock"},"Classes/ObservableVariable.html#/s:4Emit18ObservableVariableC6signalAA6SignalCyxGvp":{"name":"signal","abstract":"<p>Signal emited on value changes</p>","parent_name":"ObservableVariable"},"Classes/ObservableVariable.html#/s:4Emit18ObservableVariableC5valuexvp":{"name":"value","abstract":"<p>Current value</p>","parent_name":"ObservableVariable"},"Classes/ObservableVariable.html#/s:4Emit18ObservableVariableCyACyxGxcfc":{"name":"init(_:)","abstract":"<p>Creates a variable encapsulating the given value</p>","parent_name":"ObservableVariable"},"Classes/ObservableVariable.html":{"name":"ObservableVariable","abstract":"<p>Observable variable that emits a signal every time the value is changed.</p>"},"Classes/RWLock.html":{"name":"RWLock","abstract":"<p>Read-write lock; multiple readers are allowed simultaneously but only one writer.</p>"},"Classes/Signal.html":{"name":"Signal","abstract":"<p><code>Signal</code> provides a mechanism for publishing events to subscribers.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"}}